---
openapi: 3.0.3
info:
  title: DotAAS Part 2 | HTTP/REST | Registry and Discovery API
  description: The registry and discovery API as part of Details of the Asset Administration Shell Part 2
  termsOfService: https://github.com/admin-shell-io/aas-specs
  contact:
    name: Constantin Ziesche, Andreas Orzelski, Florian Krebs, Bastian Rössl, Manuel Sauer, Jens Vialkowitsch, Michael Hoffmeister, Torben Miny, Sebastian Bader, Marko Ristin, Nico Braunisch
  version: V1.0RC03
servers:
- url: '{protocol}://{host_name}:{port}/api/{version_prefix}'
  variables:
    protocol:
      description: Allows access through http and https (recommended)
      default: https
      enum:
      - http
      - https
    host_name:
      description: Hostname of server hosting the api
      default: admin-shell.io
    port:
      description: 80 is default for http, 443 for https
      default: "443"
      enum:
      - "80"
      - "443"
    version_prefix:
      default: v1
      enum:
      - v1
paths:
  /shell-descriptors:
    get:
      tags:
      - Registry and Discovery API
      summary: Returns all Asset Administration Shell Descriptors
      operationId: GetAllAssetAdministrationShellDescriptors
      responses:
        "200":
          description: Requested Asset Administration Shell Descriptors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/1/0/RC03
    post:
      tags:
      - Registry and Discovery API
      summary: Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS
      operationId: PostAssetAdministrationShellDescriptor
      requestBody:
        description: Asset Administration Shell Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        required: true
      responses:
        "201":
          description: Asset Administration Shell Descriptor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/1/0/RC03
  /shell-descriptors/{aasIdentifier}:
    get:
      tags:
      - Registry and Discovery API
      summary: Returns a specific Asset Administration Shell Descriptor
      operationId: GetAssetAdministrationShellDescriptorById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: Requested Asset Administration Shell Descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/1/0/RC03
    put:
      tags:
      - Registry and Discovery API
      summary: Updates an existing Asset Administration Shell Descriptor
      operationId: PutAssetAdministrationShellDescriptorById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      requestBody:
        description: Asset Administration Shell Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        required: true
      responses:
        "204":
          description: Asset Administration Shell Descriptor updated successfully
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/1/0/RC03
    delete:
      tags:
      - Registry and Discovery API
      summary: Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS
      operationId: DeleteAssetAdministrationShellDescriptorById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      responses:
        "204":
          description: Asset Administration Shell Descriptor deleted successfully
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/1/0/RC03
  /shell-descriptors/{aasIdentifier}/submodel-descriptors:
    get:
      tags:
      - Registry and Discovery API
      summary: Returns all Submodel Descriptors
      operationId: GetAllSubmodelDescriptors
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: Requested Submodel Descriptors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmodelDescriptor'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/1/0/RC03
    post:
      tags:
      - Registry and Discovery API
      summary: Creates a new Submodel Descriptor, i.e. registers a submodel
      operationId: PostSubmodelDescriptor
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      requestBody:
        description: Submodel Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        required: true
      responses:
        "201":
          description: Submodel Descriptor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelDescriptor/1/0/RC03
  /shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}:
    get:
      tags:
      - Registry and Discovery API
      summary: Returns a specific Submodel Descriptor
      operationId: GetSubmodelDescriptorById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: Requested Submodel Descriptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelDescriptorById/1/0/RC03
    put:
      tags:
      - Registry and Discovery API
      summary: Updates an existing Submodel Descriptor
      operationId: PutSubmodelDescriptorById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      requestBody:
        description: Submodel Descriptor object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        required: true
      responses:
        "204":
          description: Submodel Descriptor updated successfully
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelDescriptorById/1/0/RC03
    delete:
      tags:
      - Registry and Discovery API
      summary: Deletes a Submodel Descriptor, i.e. de-registers a submodel
      operationId: DeleteSubmodelDescriptorById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      - name: submodelIdentifier
        in: path
        description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      responses:
        "204":
          description: Submodel Descriptor deleted successfully
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/1/0/RC03
  /lookup/shells:
    get:
      tags:
      - Registry and Discovery API
      summary: Returns a list of Asset Administration Shell ids linked to specific Asset identifiers
      operationId: GetAllAssetAdministrationShellIdsByAssetLink
      parameters:
      - name: assetIds
        in: query
        description: A list of specific Asset identifiers
        required: false
        style: form
        explode: true
        schema:
          type: array
          example: '[ { "name": "some-asset-id", "value": "http://example-company.com/myAsset", "externalSubjectId": { "keys": [ { "type": "GlobalReference", "value": "http://example-company.com/example-companys-asset-keys" } ], "type": "GlobalReference" } }, { "name": "some-other-asset-id", "value": "12345ABC", "externalSubjectId": { "keys": [ { "type": "GlobalReference", "value": "http://my-own-company.com/keys" } ], "type": "GlobalReference" } } ]e": "globalAssetId","value": "http://example.company/myAsset", "externalSubjectId": "http://example.company"},{"name": "myOwnInternalAssetId","value": "12345ABC", "externalSubjectId": "http://example.company"}]'
          items:
            $ref: '#/components/schemas/SpecificAssetId'
      responses:
        "200":
          description: Requested Asset Administration Shell ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellIdsByAssetLink/1/0/RC03
  /lookup/shells/{aasIdentifier}:
    get:
      tags:
      - Registry and Discovery API
      summary: Returns a list of specific Asset identifiers based on an Asset Administration Shell id to edit discoverable content
      operationId: GetAllAssetLinksById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: Requested specific Asset identifiers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecificAssetId'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetLinksById/1/0/RC03
    post:
      tags:
      - Registry and Discovery API
      summary: Creates specific Asset identifiers linked to an Asset Administration Shell to edit discoverable content
      operationId: PostAllAssetLinksById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: bytev
      requestBody:
        description: A list of specific Asset identifiers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SpecificAssetId'
        required: true
      responses:
        "201":
          description: Specific Asset identifiers created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecificAssetId'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostAllAssetLinksById/1/0/RC03
    delete:
      tags:
      - Registry and Discovery API
      summary: Deletes all specific Asset identifiers linked to an Asset Administration Shell to edit discoverable content
      operationId: DeleteAllAssetLinksById
      parameters:
      - name: aasIdentifier
        in: path
        description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: byte
      responses:
        "204":
          description: Specific Asset identifiers deleted successfully
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        default:
          description: Default error handling for unmentioned status codes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteAllAssetLinksById/1/0/RC03
components:
  schemas:
    AssetAdministrationShellDescriptor:
      required:
      - endpoints
      - identification
      type: object
      example: '{ "identification": "https://example.org/aas/motor", "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
      allOf:
      - $ref: '#/components/schemas/Descriptor'
      - properties:
          administration:
            $ref: '#/components/schemas/AdministrativeInformation'
          descriptions:
            type: array
            items:
              $ref: '#/components/schemas/LangString'
          displayNames:
            type: array
            items:
              $ref: '#/components/schemas/LangString'
          globalAssetId:
            $ref: '#/components/schemas/Reference'
          idShort:
            type: string
          identification:
            type: string
          specificAssetIds:
            $ref: '#/components/schemas/SpecificAssetId'
          submodelDescriptors:
            type: array
            items:
              $ref: '#/components/schemas/SubmodelDescriptor'
    Descriptor:
      type: object
      properties:
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
      example: '{ "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
    Endpoint:
      required:
      - interface
      - protocolInformation
      type: object
      properties:
        interface:
          type: string
        protocolInformation:
          $ref: '#/components/schemas/ProtocolInformation'
    ProtocolInformation:
      required:
      - endpointAddress
      type: object
      properties:
        endpointAddress:
          type: string
        endpointProtocol:
          type: string
        endpointProtocolVersion:
          type: string
        subprotocol:
          type: string
        subprotocolBody:
          type: string
        subprotocolBodyEncoding:
          type: string
    AdministrativeInformation:
      allOf:
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          version:
            minLength: 1
            type: string
          revision:
            minLength: 1
            type: string
    HasDataSpecification:
      type: object
      properties:
        embeddedDataSpecifications:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedDataSpecification'
    EmbeddedDataSpecification:
      required:
      - dataSpecification
      - dataSpecificationContent
      type: object
      properties:
        dataSpecification:
          $ref: '#/components/schemas/Reference'
        dataSpecificationContent:
          $ref: '#/components/schemas/DataSpecificationContent'
    Reference:
      allOf:
      - $ref: '#/components/schemas/ReferenceParent'
      - properties:
          referredSemanticId:
            $ref: '#/components/schemas/ReferenceParent'
    ReferenceParent:
      required:
      - keys
      - type
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Key'
    ReferenceTypes:
      type: string
      enum:
      - GlobalReference
      - ModelReference
    Key:
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/KeyTypes'
        value:
          minLength: 1
          type: string
    KeyTypes:
      type: string
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataElement
      - Entity
      - EventElement
      - File
      - FragmentReference
      - GlobalReference
      - Identifiable
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - Referable
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElement
      - SubmodelElementCollection
      - SubmodelElementList
    DataSpecificationContent:
      required:
      - modelType
      type: object
      properties:
        modelType:
          $ref: '#/components/schemas/ModelType'
    ModelType:
      type: string
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataSpecificationIEC61360
      - DataSpecificationPhysicalUnit
      - Entity
      - File
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElementCollection
      - SubmodelElementList
    LangString:
      required:
      - language
      - text
      type: object
      properties:
        language:
          pattern: ^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$
          type: string
        text:
          type: string
    SpecificAssetId:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - required:
        - externalSubjectId
        - name
        - value
        properties:
          name:
            minLength: 1
            type: string
          value:
            minLength: 1
            type: string
          externalSubjectId:
            $ref: '#/components/schemas/Reference'
    HasSemantics:
      type: object
      properties:
        semanticId:
          $ref: '#/components/schemas/Reference'
        supplementalSemanticIds:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Reference'
    SubmodelDescriptor:
      required:
      - endpoints
      - identification
      type: object
      properties:
        administration:
          $ref: '#/components/schemas/AdministrativeInformation'
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/LangString'
        displayNames:
          type: array
          items:
            $ref: '#/components/schemas/LangString'
        idShort:
          type: string
        identification:
          type: string
        semanticId:
          $ref: '#/components/schemas/Reference'
      example: '{ "identification": "https://admin-shell.io/zvei/nameplate/1/0/Nameplate", "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
      allOf:
      - $ref: '#/components/schemas/Descriptor'
    Result:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        success:
          type: boolean
    Message:
      type: object
      properties:
        code:
          type: string
        messageType:
          type: string
          enum:
          - Undefined
          - Info
          - Warning
          - Error
          - Exception
        text:
          type: string
        timestamp:
          type: string
