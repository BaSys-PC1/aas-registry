image: maven:3-jdk-11

variables:
  DOCKER_HOST: "tcp://docker:2375" 
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  MAVEN_TARGET: ${CI_PROJECT_DIR}/${MAVEN_PROJECT}/target
  MAVEN_OPTS: "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  MAVEN_CLI_OPTS: "-s ${CI_PROJECT_DIR}/.m2/settings.xml --batch-mode  -Pgitlab"
  BUILD_ARTIFACT: aas-registry-service-0.0.1-SNAPSHOT.jar
  DOCKER_JAR: aas-registry-service.jar  

cache:
  paths:
    - .m2/repository/
    
stages:
  - validate
  - build
  - test
  - deploy
  - publish

validate:
  stage: validate
  tags:
    - basys
    - maven
  script:
    - mvn -V $MAVEN_CLI_OPTS validate
    
compile:
  stage: build
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS compile -Dmaven.validate.skip=true
  artifacts:
    paths:
      - ${MAVEN_TARGET}
    
test:
  stage: test 
  services:
    - name: docker:19.03.15-dind
    # explicitly disable tls to avoid docker startup interruption
      command: ["--tls=false"]
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS test -Dmaven.validate.skip=true -Dmaven.compile.skip=true
  dependencies:
     - compile
  
deploy:
  stage: deploy
  tags:
    - basys
    - maven
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    #- if: $CI_COMMIT_BRANCH == 'development'
  script:
    - mvn $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true -Dmaven.compile.skip=true -Dmaven.test.skip=true
  dependencies:
    - compile
  artifacts:
    paths:
      - ${MAVEN_TARGET} 
      
docker:
  stage: publish
  image: docker:19.03.15
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_IMAGE_NAME: '$CI_PROJECT_NAME'
    DOCKER_IMAGE_VERSION: 'latest'
    DOCKER_IMAGE: '$DOCKER_REGISTRY_USER/$CI_PROJECT_NAME:$DOCKER_IMAGE_VERSION'
  services:
     - name: docker:19.03.15-dind
       # explicitly disable tls to avoid docker startup interruption
       command: ["--tls=false"]
  dependencies:
    - deploy
  tags:
    - basys
    - docker
  before_script:
    - docker info      
  script:
    - cp aas-registry-service/target/$BUILD_ARTIFACT docker/$DOCKER_JAR
    - cd docker
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD"
    - docker build -t "$DOCKER_IMAGE" .
    #- docker push "$DOCKER_IMAGE"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == 'development'