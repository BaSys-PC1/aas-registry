image: maven:3.6.0-jdk-11

variables:
  DOCKER_HOST: "tcp://docker:2375" 
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  MAVEN_TARGET_PLUGINS: ${CI_PROJECT_DIR}/aas-registry-plugins/target
  MAVEN_TARGET_EVENTS: ${CI_PROJECT_DIR}/aas-registry-events/target
  MAVEN_TARGET_PATHS: ${CI_PROJECT_DIR}/aas-registry-paths/target
  MAVEN_TARGET_CLIENT: ${CI_PROJECT_DIR}/aas-registry-client/target
  MAVEN_TARGET_SERVICE: ${CI_PROJECT_DIR}/aas-registry-service/target
  CLIENT_OPENAPI_FOLDER: ${CI_PROJECT_DIR}/aas-registry-client/open-api
  CLIENT_OPENAPI_FILE: ${CLIENT_OPENAPI_FOLDER}/Plattform_i40-Registry-and-Discovery.yaml
  MAVEN_OPTS: "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  MAVEN_CLI_OPTS: "-s ${CI_PROJECT_DIR}/.m2/settings.xml --batch-mode -Pgitlab"
  BUILD_ARTIFACT: aas-registry-service-0.1.0-SNAPSHOT.jar
  DOCKER_JAR: aas-registry-service.jar  
  TYPESCRIPT_FOLDER: ${CI_PROJECT_DIR}/typescript
  NPM_REPO: ${MAVEN_REPO_URL}/npm-hosted/  # same as for maven but with npm-hosted suffix

cache:
  paths:
    - .m2/repository/
    
stages:
  - plugin
  - validate
  - build-java
  - build-typescript
  - test
  - install
  - deploy
  - publish

build-plugin:
  stage: plugin
  tags:
    - basys
    - maven
  script:
    - cd aas-registry-plugins
    - mvn $MAVEN_CLI_OPTS install 
  artifacts:
    paths:
      - $MAVEN_TARGET_PLUGINS
    expire_in: 3 hour    
    
validate:
  stage: validate
  tags:
    - basys
    - maven
  script:
    - mvn -V $MAVEN_CLI_OPTS validate
  dependencies:
    - build-plugin
    
compile:
  stage: build-java
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS compile -Dmaven.validate.skip=true
  dependencies:
    - build-plugin
  artifacts:
    paths:
      - $MAVEN_TARGET_EVENTS
      - $MAVEN_TARGET_PATHS
      - $MAVEN_TARGET_CLIENT
      - $MAVEN_TARGET_SERVICE
      - $CLIENT_OPENAPI_FOLDER
    expire_in: 3 hour    
    
deploy-npm:
  image: node:17.5-alpine
  stage: deploy
  tags:
    - basys
  dependencies:
    - compile
  script:
    - mkdir $TYPESCRIPT_FOLDER
    - cd $TYPESCRIPT_FOLDER
    - mvn dependency:get -Dartifact=io.swagger.codegen.v3:swagger-codegen-cli:3.0.31:jar -Ddest=openapi-generator.jar
    - java -jar openapi-generator.jar generate -l typescript-fetch -i ../aas-registry-client/open-api/Plattform_i40-Registry-and-Discovery.yaml -o . --additional-properties [ npmName=aas-registry-client-ts-fetch npmVersion=0.3.0 npmRepository=$NPM_REPO snapshot=true ]
    - rm openapi-generator.jar
    - rm -rf .swagger-codegen
    - npm install 
    - npm prune 
    - token=$(echo -n '${MAVEN_REPO_USER}:${MAVEN_REPO_PASS}' | base64)
    - npm config set _auth $token
    - npm config set always-auth true
    - npm config set strict-ssl false
    - npm config set email basys-support@dfki.de
    - npm run build
    - npm publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == 'development'

test:
  stage: test 
  services:
     - name: docker:19.03.15-dind
       # explicitly disable tls to avoid docker startup interruption
       command: ["--tls=false"]
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS test -Dmaven.validate.skip=true -Dmaven.compile.skip=true
  dependencies:
     - compile
  
install:
  stage: install
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS install -Dmaven.validate.skip=true -Dmaven.compile.skip=true -Dmaven.test.skip=true
  dependencies:
     - compile
  artifacts:
    paths:
      - $MAVEN_TARGET_EVENTS
      - $MAVEN_TARGET_PATHS
      - $MAVEN_TARGET_CLIENT
      - $MAVEN_TARGET_SERVICE
    expire_in: 3 hour
  
deploy:
  stage: deploy
  tags:
    - basys
    - maven
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    #- if: $CI_COMMIT_BRANCH == 'development'
  script:
    - mvn $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true -Dmaven.compile.skip=true -Dmaven.test.skip=true
  dependencies:
    - compile
      
docker:
  stage: publish
  image: docker:19.03.15
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_IMAGE_VERSION: 'dotaas-latest'
    DOCKER_IMAGE: '$DOCKER_REGISTRY_USER/$CI_PROJECT_NAME:$DOCKER_IMAGE_VERSION'
  services:
     - name: docker:19.03.15-dind
       # explicitly disable tls to avoid docker startup interruption
       command: ["--tls=false"]
  dependencies:
    - install
  tags:
    - basys
    - docker
  before_script:
    - docker info      
  script:
    - cd aas-registry-service
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD"
    - docker build -t "$DOCKER_IMAGE" .
    - docker push "$DOCKER_IMAGE"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == 'development'