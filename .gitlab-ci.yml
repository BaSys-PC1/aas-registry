image: maven:3-eclipse-temurin-11-alpine

variables:
  DOCKER_HOST: "tcp://docker:2375" 
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2  
  MAVEN_TARGET_PLUGINS: '${CI_PROJECT_DIR}/aas-registry-plugins/target'
  MAVEN_TARGET_CLASSES: '${CI_PROJECT_DIR}/**/target/classes'
  MAVEN_TARGET_JARS: '${CI_PROJECT_DIR}/**/target/*.jar'
  MAVEN_TARGET_RELEASE_JARS: '${CI_PROJECT_DIR}/aas-registry-service-release-*/target/*.jar'
  CLIENT_OPENAPI_FOLDER: ${CI_PROJECT_DIR}/aas-registry-client/open-api
  CLIENT_OPENAPI_FILE: ${CLIENT_OPENAPI_FOLDER}/Plattform_i40-Registry-and-Discovery.yaml
  MAVEN_OPTS: "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  MAVEN_CLI_OPTS: "-s ${CI_PROJECT_DIR}/.m2/settings.xml --batch-mode -Pgitlab"
  TYPESCRIPT_FOLDER: ${CI_PROJECT_DIR}/typescript
  NPM_REPO: ${MAVEN_REPO_URL}/npm-hosted/  # same as for maven but with npm-hosted suffix

cache:
  paths:
    - .m2/repository/
    
stages:
  - plugin
  - validate
  - build-java
  - build-typescript
  - test
  - install
  - deploy

build-plugin:
  stage: plugin
  tags:
    - basys
    - maven
  script:
    - cd aas-registry-plugins
    - mvn $MAVEN_CLI_OPTS deploy 
  artifacts:
    paths:
      - $MAVEN_TARGET_PLUGINS
    expire_in: 3 hour    
    
validate:
  stage: validate
  tags:
    - basys
    - maven
  script:
    - mvn -V $MAVEN_CLI_OPTS validate
  dependencies:
    - build-plugin
    
compile:
  stage: build-java
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS compile -Dmaven.validate.skip=true
  dependencies:
    - build-plugin
  artifacts:
    paths:
      - $MAVEN_TARGET_CLASSES
      - $CLIENT_OPENAPI_FOLDER
    expire_in: 3 hour    
    
generate-typescript:
  stage: build-typescript
  tags: 
    - basys
    - maven
  dependencies:
    - compile
  script:
    - mkdir $TYPESCRIPT_FOLDER
    - cd $TYPESCRIPT_FOLDER
    - mvn dependency:get -Dartifact=io.swagger.codegen.v3:swagger-codegen-cli:3.0.31:jar -Ddest=openapi-generator.jar
    - java -jar openapi-generator.jar generate -l typescript-fetch -i ../aas-registry-client/open-api/Plattform_i40-Registry-and-Discovery.yaml -o . --additional-properties [ npmName=@basys/aas-registry-client-ts-fetch npmVersion=0.3.0 snapshot=true ]
    - rm openapi-generator.jar
    - rm -rf .swagger-codegen
  artifacts:
    paths:
      - $TYPESCRIPT_FOLDER
    expire_in: 3 hour
  
deploy-npm:
  image: node:14-alpine
  stage: deploy
  tags:
    - basys
  dependencies:
    - generate-typescript
  script:
    - cd $TYPESCRIPT_FOLDER
    - npm config set strict-ssl false
    - npm config set @basys:registry $NPM_REPO
    - npm config set email basys-support@dfki.de
    - TOKEN=$(echo -n ${MAVEN_REPO_USER}:${MAVEN_REPO_PASS} | base64)
    - npm config set _auth ${TOKEN}    
    - npm config set always-auth true
    - npm install  # check dependencies could be installed
    - npm prune 
    - npm run build  # build with tests
    - npm publish  # deploy
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'develop'

test:
  stage: test 
  services:
     - name: docker:20.10.12-dind
       # explicitly disable tls to avoid docker startup interruption
       command: ["--tls=false"]
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS test -Dmaven.validate.skip=true -Dmaven.compile.skip=true
  dependencies:
     - compile

install:
  stage: install
  tags:
    - basys
    - maven
  script:
    - mvn -o $MAVEN_CLI_OPTS install -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true
  dependencies:
     - compile
  artifacts:
    paths:
      - $MAVEN_TARGET_RELEASE_JARS
    expire_in: 3 hour

deploy-mvn:
  stage: deploy
  tags:
    - basys
    - maven
  script:
    - cd aas-registry-client; mvn $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
    - cd aas-registry-compatibility; mvn $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
    - cd aas-registry-events; mvn $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
    - cd aas-registry-paths; mvn $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
   # - cd aas-registry-service; mvn -o $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
    # - cd aas-registry-service-base-model; mvn -o $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
    # - cd aas-registry-service-base-tests; mvn -o $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
    # - cd aas-registry-service-elasticsearch-storage; mvn -o $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
    # - cd aas-registry-service-inmemory-storage; mvn -o $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
    # - cd aas-registry-service-kafka-events; mvn -o $MAVEN_CLI_OPTS deploy -Dmaven.validate.skip=true  -Dmaven.test.skip=true -Dmaven.compile.skip=true -Dmaven.install.skip=true; cd ..
  dependencies:
    - install

docker:
  stage: deploy
  image: docker:20.10.12
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_IMAGE_VERSION_PREFIX: '0.1.0-snapshot'
    DOCKER_IMAGE_NAME: 'aas-registry-dotaas-part2'
  services:
     - name: docker:20.10.12-dind
       # explicitly disable tls to avoid docker startup interruption
       command: ["--tls=false"]
  dependencies:
    - install
  tags:
    - basys
    - docker
  before_script:
    - docker info      
  script:
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD"
    - cd aas-registry-service-release-kafka-es; docker build -t dfkibasys/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION_PREFIX}-kafka-es . ; cd ..
    - cd aas-registry-service-release-kafka-mem; docker build -t dfkibasys/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION_PREFIX}-kafka-mem . ; cd ..
    - cd aas-registry-service-release-log-es; docker build -t dfkibasys/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION_PREFIX}-log-es . ; cd ..
    - cd aas-registry-service-release-log-mem; docker build -t dfkibasys/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION_PREFIX}-log-mem . ; cd ..
    - docker push "docker.io/dfkibasys/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION_PREFIX}-kafka-es"
    - docker push "docker.io/dfkibasys/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION_PREFIX}-kafka-mem"
    - docker push "docker.io/dfkibasys/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION_PREFIX}-log-es"
    - docker push "docker.io/dfkibasys/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION_PREFIX}-log-mem"
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'develop'
