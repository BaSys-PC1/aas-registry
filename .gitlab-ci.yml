image: maven:3-eclipse-temurin-11-alpine

variables:
  DOCKER_HOST: "tcp://docker:2375" 
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2  
  MAVEN_TARGET_CLIENT: ${CI_PROJECT_DIR}/aas-registry-client/target
  MAVEN_TARGET_EVENTS: ${CI_PROJECT_DIR}/aas-registry-events/target
  MAVEN_TARGET_PATHS: ${CI_PROJECT_DIR}/aas-registry-paths/target
  MAVEN_TARGET_PLUGINS: ${CI_PROJECT_DIR}/aas-registry-plugins/target
  MAVEN_TARGET_SERVICE: ${CI_PROJECT_DIR}/aas-registry-service/target
  MAVEN_TARGET_SERVICE_BASE_MODEL: ${CI_PROJECT_DIR}/aas-registry-service-base-model/target
  MAVEN_TARGET_SERVICE_BASE_TESTS: ${CI_PROJECT_DIR}/aas-registry-service-base-tests/target
  MAVEN_TARGET_SERVICE_ELASTICSEARCH_STORAGE: ${CI_PROJECT_DIR}/aas-registry-service-elasticsearch-storage/target
  MAVEN_TARGET_SERVICE_INMEMORY_STORAGE: ${CI_PROJECT_DIR}/aas-registry-service-inmemory-storage/target
  MAVEN_TARGET_SERVICE_KAFKA_EVENTS: ${CI_PROJECT_DIR}/aas-registry-service-kafka-events/target
  MAVEN_TARGET_SERVICE_RELEASES: ${CI_PROJECT_DIR}/aas-registry-service-releases/target
  MAVEN_TARGET_COMPATIBILITY: ${CI_PROJECT_DIR}/aas-registry-compatibility/target
  CLIENT_OPENAPI_FOLDER: ${CI_PROJECT_DIR}/aas-registry-client/open-api
  CLIENT_OPENAPI_FILE: ${CLIENT_OPENAPI_FOLDER}/Plattform_i40-Registry-and-Discovery.yaml
  MAVEN_OPTS: "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  MAVEN_CLI_OPTS: "-s ${CI_PROJECT_DIR}/.m2/settings.xml --batch-mode -Pgitlab"
#  DOCKER_JAR: aas-registry-service.jar  
  TYPESCRIPT_FOLDER: ${CI_PROJECT_DIR}/typescript
  NPM_REPO: ${MAVEN_REPO_URL}/npm-hosted/  # same as for maven but with npm-hosted suffix

cache:
  paths:
    - .m2/repository/
    
stages:
  - plugin
  - validate
  - build-java
  - build-typescript
  - test
  - install
  - deploy

build-plugin:
  stage: plugin
  tags:
    - basys
    - maven
  script:
    - cd aas-registry-plugins
    - mvn $MAVEN_CLI_OPTS install 
  artifacts:
    paths:
      - $MAVEN_TARGET_PLUGINS
    expire_in: 3 hour    
    
validate:
  stage: validate
  tags:
    - basys
    - maven
  script:
    - mvn -V $MAVEN_CLI_OPTS validate
  dependencies:
    - build-plugin
    
compile:
  stage: build-java
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS compile -Dmaven.validate.skip=true
  dependencies:
    - build-plugin
  artifacts:
    paths:
      - $MAVEN_TARGET_CLIENT
      - $MAVEN_TARGET_EVENTS
      - $MAVEN_TARGET_PATHS
      - $MAVEN_TARGET_PLUGINS
      - $MAVEN_TARGET_SERVICE
      - $MAVEN_TARGET_SERVICE_BASE_MODEL
      - $MAVEN_TARGET_SERVICE_BASE_TESTS
      - $MAVEN_TARGET_SERVICE_ELASTICSEARCH_STORAGE
      - $MAVEN_TARGET_SERVICE_INMEMORY_STORAGE
      - $MAVEN_TARGET_SERVICE_KAFKA_EVENTS
      - $MAVEN_TARGET_SERVICE_RELEASES
      - $MAVEN_TARGET_COMPATIBILITY
      - $CLIENT_OPENAPI_FOLDER
    expire_in: 3 hour    
    
generate-typescript:
  stage: build-typescript
  tags: 
    - basys
    - maven
  dependencies:
    - compile
  script:
    - mkdir $TYPESCRIPT_FOLDER
    - cd $TYPESCRIPT_FOLDER
    - mvn dependency:get -Dartifact=io.swagger.codegen.v3:swagger-codegen-cli:3.0.31:jar -Ddest=openapi-generator.jar
    - java -jar openapi-generator.jar generate -l typescript-fetch -i ../aas-registry-client/open-api/Plattform_i40-Registry-and-Discovery.yaml -o . --additional-properties [ npmName=@basys/aas-registry-client-ts-fetch npmVersion=0.3.0 snapshot=true ]
    - rm openapi-generator.jar
    - rm -rf .swagger-codegen
  artifacts:
    paths:
      - $TYPESCRIPT_FOLDER
    expire_in: 3 hour
  
deploy-npm:
  image: node:14-alpine
  stage: deploy
  tags:
    - basys
  dependencies:
    - generate-typescript
  script:
    - cd $TYPESCRIPT_FOLDER
    - npm config set strict-ssl false
    - npm config set @basys:registry $NPM_REPO
    - npm config set email basys-support@dfki.de
    - TOKEN=$(echo -n ${MAVEN_REPO_USER}:${MAVEN_REPO_PASS} | base64)
    - npm config set _auth ${TOKEN}    
    - npm config set always-auth true
    - npm install  # check dependencies could be installed
    - npm prune 
    - npm run build  # build with tests
    - npm publish  # deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == 'development'

# test:
#   stage: test 
#   services:
#      - name: docker:20.10.12-dind
#        # explicitly disable tls to avoid docker startup interruption
#        command: ["--tls=false"]
#   tags:
#     - basys
#     - maven
#   script:
#     - mvn $MAVEN_CLI_OPTS test -Dmaven.validate.skip=true -Dmaven.compile.skip=true
#   dependencies:
#      - compile

  
install:
  stage: install
  tags:
    - basys
    - maven
  script:
    - mvn $MAVEN_CLI_OPTS install -Dmaven.validate.skip=true -Dmaven.compile.skip=true -Dmaven.test.skip=true
  dependencies:
     - compile
  artifacts:
    paths:
      - $MAVEN_TARGET_CLIENT
      - $MAVEN_TARGET_EVENTS
      - $MAVEN_TARGET_PATHS
      - $MAVEN_TARGET_PLUGINS
      - $MAVEN_TARGET_SERVICE
      - $MAVEN_TARGET_SERVICE_BASE_MODEL
      - $MAVEN_TARGET_SERVICE_BASE_TESTS
      - $MAVEN_TARGET_SERVICE_ELASTICSEARCH_STORAGE
      - $MAVEN_TARGET_SERVICE_INMEMORY_STORAGE
      - $MAVEN_TARGET_SERVICE_KAFKA_EVENTS
      - $MAVEN_TARGET_SERVICE_RELEASES
    expire_in: 3 hour

deploy:
  stage: deploy
  image: dfkibasys/docker-temurin11jdk:20.10.12
  variables:
    DOCKER_DRIVER: overlay2
  services:
    - name: docker:20.10.12-dind
      command: ["--tls=false"]
  tags:
    - basys
    - docker
  dependencies:
    - compile
  script:
    - chmod 775 ./mvnw
    - ./mvnw $MAVEN_CLI_OPTS -Ddocker.username=$DOCKER_REGISTRY_USER -Ddocker.password=$DOCKER_REGISTRY_PASSWORD spring-boot:build-image -pl modules/server -Dmaven.validate.skip=true -Dmaven.compile.skip=true -Dmaven.test.skip=true    
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == 'develop'
      
# docker:
#   stage: publish
#   image: docker:19.03.15
#   variables:
#     DOCKER_DRIVER: overlay2
#     DOCKER_IMAGE_VERSION: 'dotaas-latest'
#     DOCKER_IMAGE: '$DOCKER_REGISTRY_USER/$CI_PROJECT_NAME:$DOCKER_IMAGE_VERSION'
#   services:
#      - name: docker:19.03.15-dind
#        # explicitly disable tls to avoid docker startup interruption
#        command: ["--tls=false"]
#   dependencies:
#     - install
#   tags:
#     - basys
#     - docker
#   before_script:
#     - docker info      
#   script:
#     - cd aas-registry-service
#     - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD"
#     - docker build -t "$DOCKER_IMAGE" .
#     - docker push "$DOCKER_IMAGE"
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#     - if: $CI_COMMIT_BRANCH == 'development'