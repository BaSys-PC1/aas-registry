/*
 * DotAAS Part 2 | HTTP/REST | Registry and Discovery
 * The registry and discovery interface as part of Details of the Asset Administration Shell Part 2
 *
 * OpenAPI spec version: Final-Draft
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.eclipse.basyx.aas.registry.model;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets KeyElements
 */
@JsonAdapter(KeyElements.Adapter.class)
public enum KeyElements {
  ASSET("Asset"),
  ASSETADMINISTRATIONSHELL("AssetAdministrationShell"),
  CONCEPTDESCRIPTION("ConceptDescription"),
  SUBMODEL("Submodel"),
  ACCESSPERMISSIONRULE("AccessPermissionRule"),
  ANNOTATEDRELATIONSHIPELEMENT("AnnotatedRelationshipElement"),
  BASICEVENT("BasicEvent"),
  BLOB("Blob"),
  CAPABILITY("Capability"),
  DATAELEMENT("DataElement"),
  FILE("File"),
  ENTITY("Entity"),
  EVENT("Event"),
  MULTILANGUAGEPROPERTY("MultiLanguageProperty"),
  OPERATION("Operation"),
  PROPERTY("Property"),
  RANGE("Range"),
  REFERENCEELEMENT("ReferenceElement"),
  RELATIONSHIPELEMENT("RelationshipElement"),
  SUBMODELELEMENT("SubmodelElement"),
  SUBMODELELEMENTLIST("SubmodelElementList"),
  SUBMODELELEMENTSTRUCT("SubmodelElementStruct"),
  VIEW("View"),
  GLOBALREFERENCE("GlobalReference"),
  FRAGMENTREFERENCE("FragmentReference");

  private String value;

  KeyElements(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static KeyElements fromValue(String text) {
    for (KeyElements b : KeyElements.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<KeyElements> {
    @Override
    public void write(final JsonWriter jsonWriter, final KeyElements enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public KeyElements read(final JsonReader jsonReader) throws IOException {
      Object value = jsonReader.nextString();
      return KeyElements.fromValue(String.valueOf(value));
    }
  }
}
