version: '3.6'

networks:
  basyx:
    internal: false

volumes:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local
  elasticsearch-data:
    driver: local
    
services:  
  portainer:
    image: portainer/portainer:latest
    container_name: basyx-portainer
    restart: always
    ports:
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - basyx
      
  zookeeper:
    image: zookeeper:3.6
    container_name: basyx-zookeeper
    restart: always
    ports:
      - "2181:2181"  
    volumes:
      #- ./data/zookeeper/conf/zoo.cfg:/conf/zoo.cfg:Z  
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log   
    networks:
      - basyx
      
  kafka:
    image: confluentinc/cp-kafka:6.2.1
    container_name: basyx-kafka
    volumes:
      - kafka-data:/var/lib/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # use one protocol in the docker network 
      # and one from outside docker for testing
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    links:
      - zookeeper
    restart: always
    networks:
      - basyx
      
  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: elasticsearch
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data     
    environment:
      - discovery.type=single-node  
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - basyx
  
  kibana:
    image: kibana:7.14.2
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: always
    networks:
      - basyx      
               
  # aas-registry:
  #   image: aas-registry/latest
  #   container_name: aas-registry
  #   ports:
  #     - "8020:8080"
  #   depends_on:
  #     - elasticsearch
  #     - kafka
  #   restart: always
  #   environment:
  #     ELASTICSEARCH_HOST_URL: elasticsearch:9200 
  #     KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
  #   networks:
  #      - basyx